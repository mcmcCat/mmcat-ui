@use "sass:map";
@use "function" as *;
@use "../common/var" as *;

@mixin set-css-var-value($name, $value) {
  #{joinVarName($name)}: #{$value};
}

@mixin set-css-color-type($colors, $type) {
  @include set-css-var-value(("color", $type), map.get($colors, $type, "base"));

  @each $i in (3, 5, 7, 8, 9) {
    @include set-css-var-value(
      ("color", $type, "light", $i),
      map.get($colors, $type, "light-#{$i}")
    );
  }

  @include set-css-var-value(
    ("color", $type, "dark-2"),
    map.get($colors, $type, "dark-2")
  );
}

@mixin set-component-css-var($name, $variables) {
  @each $attribute, $value in $variables {
    @if $attribute == "default" {
      #{getCssVarName($name)}: #{$value};
    } @else {
      #{getCssVarName($name, $attribute)}: #{$value};
    }
  }
}

// generate css var from existing css var
// for example:
// @include css-var-from-global(('button', 'text-color'), ('color', $type))
// --el-button-text-color: var(--el-color-#{$type});

// @include css-var-from-global(('button', 'active','bg-color'), ("color",'success',"dark-2"))
// --el-button-active-bg-color: var(--el-color-success-dark-2);
@mixin css-var-from-global($var, $gVar) {
  $varName: joinVarName($var);
  $gVarName: joinVarName($gVar);
  #{$varName}: var(#{$gVarName});
}
